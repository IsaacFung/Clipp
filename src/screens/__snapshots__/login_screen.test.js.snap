// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "#fff",
        "flex": 1,
        "height": 1334,
      },
      Object {
        "alignItems": "center",
        "backgroundColor": "#ffffff",
        "flex": 1,
        "justifyContent": "center",
      },
    ]
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": 10,
        },
        Object {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    padder={true}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Image
        source={1}
        style={
          Object {
            "height": 144,
            "margin": "auto",
            "resizeMode": "center",
          }
        }
      />
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": "row",
            "margin": 8,
            "marginLeft": 2,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "left": 0,
              "opacity": 1,
              "paddingBottom": undefined,
              "paddingTop": undefined,
              "position": "absolute",
              "right": 0,
              "top": 18,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#575757",
                "fontSize": 17,
                "paddingRight": 5,
                "paddingTop": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 17,
                }
              }
            >
              Email
            </Text>
          </Text>
        </View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          placeholder={null}
          placeholderTextColor="#575757"
          rejectResponderTermination={true}
          style={
            Array [
              Object {
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "paddingBottom": 7,
                "paddingLeft": 5,
                "paddingRight": 5,
                "paddingTop": 3,
                "top": 8,
              },
              Object {
                "height": 40,
                "margin": 12,
                "width": "90%",
              },
            ]
          }
          textContentType="emailAddress"
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "borderBottomWidth": 1,
            "borderColor": "#D9D5DC",
            "borderLeftWidth": 0,
            "borderRadius": undefined,
            "borderRightWidth": 0,
            "borderTopWidth": 0,
            "borderWidth": undefined,
            "flexDirection": "row",
            "margin": 8,
            "marginLeft": 2,
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "left": 0,
              "opacity": 1,
              "paddingBottom": undefined,
              "paddingTop": undefined,
              "position": "absolute",
              "right": 0,
              "top": 18,
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#575757",
                "fontSize": 17,
                "paddingRight": 5,
                "paddingTop": 5,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 17,
                }
              }
            >
              Password
            </Text>
          </Text>
        </View>
        <TextInput
          allowFontScaling={true}
          editable={true}
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          onSubmitEditing={[Function]}
          placeholder={null}
          placeholderTextColor="#575757"
          rejectResponderTermination={true}
          secureTextEntry={true}
          style={
            Array [
              Object {
                "color": "#000",
                "flex": 1,
                "fontSize": 17,
                "height": 50,
                "paddingBottom": 7,
                "paddingLeft": 5,
                "paddingRight": 5,
                "paddingTop": 3,
                "top": 8,
              },
              Object {
                "height": 40,
                "margin": 12,
                "width": "90%",
              },
            ]
          }
          textContentType="password"
          underlineColorAndroid="rgba(0,0,0,0)"
          value=""
        />
      </View>
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#5cb85c",
            "borderBottomWidth": null,
            "borderColor": "#007aff",
            "borderLeftWidth": null,
            "borderRadius": 5,
            "borderRightWidth": null,
            "borderTopWidth": null,
            "borderWidth": undefined,
            "elevation": 2,
            "flexDirection": "row",
            "height": 60,
            "justifyContent": "space-between",
            "margin": 16,
            "opacity": 1,
            "paddingBottom": 6,
            "paddingTop": 6,
            "shadowColor": undefined,
            "shadowOffset": undefined,
            "shadowOpacity": undefined,
            "shadowRadius": undefined,
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "backgroundColor": "transparent",
                "color": "#fff",
                "fontFamily": "System",
                "fontSize": 22,
                "marginLeft": 0,
                "marginRight": 0,
                "paddingLeft": 16,
                "paddingRight": 16,
              },
              Object {
                "color": "#FFFFFF",
                "fontSize": 20,
                "fontWeight": "bold",
                "textTransform": "uppercase",
              },
            ]
          }
          uppercase={false}
        >
          LOG IN
        </Text>
      </View>
      <Text
        onPress={[Function]}
        style={
          Object {
            "color": "#000",
            "fontFamily": "System",
            "fontSize": 16,
          }
        }
        uppercase={false}
      >
        Forgot Password?
      </Text>
    </View>
  </RCTScrollView>
</View>
`;
